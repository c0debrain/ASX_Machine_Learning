KNNLearner
----------
    A Kth Nearest Neighbour Regression Learner. Makes use of a Bag Learner.
    An effort was made to make the code generic (especially 
    learnerPerformance.py and testLearner.py) such that when later 
    learners are made, parts of these python scripts can be moved to a
    module in the library to be used by multiple learners.

**Parameters:**
    **Forecast:**
        The length in timesteps the model attempts to predict into the
        future. (Integer > 0) (For current data a timestep is a day.)
    **Period:**
        The length in timesteps in which the models takes moving values
        from, eg moving avg and moving std. (Integer > 0) Was tethered to
        be 4xForecast.
    **Error_Modifier:**
        A coefficient that modifies the acceptable 'signal'
        strength in which it will make a trade. ( 0 < Double < ~2)
    **K:**
        The number of nearest neighbours to be aggregated.
    **Bags:**
        The number of independent kth nearest neighbour learners to be 
        aggregated from.
    **Cash:**
        The initial cash available for orders.
    **Purchase Size:**
        The size of the purchase (AUD). Eventually this should be 
        done dynamically, perhaps if the risk of each order was 
        quantified the Kelly Criterion could be used? 
    **Brokerage:**
        Chosen to be 0.002
    **Minimum Daily Volume Value:**
        Chosen to be 50,000 AUD, the algorithm will only trade in a
        stock if the average daily volume value exceeds this amount.

**Trials:**
    .. image:: https://raw.githubusercontent.com/kstoeckl/ASX_Machine_Learning/master/KNNLearner/PortfolioForValidationDataForecast%3D2.png
    
    This is the normalized value of a portfolio constructed through
    learnerPerformance.py . If it looks to good to be true, that is
    because it is.

    The parameters of this run were:
    ::
         BROKERAGE=0.002
         PURCHASESIZE=10000
         CASH=30000
         MODIFIER=0.7
         K=15
         BAGS=30
         DAILY_VOLUME_VALUE=50000
         FORECAST=2 #days
    
    This run identified a key flaw in algorithm/data. The data retrieved from
    Yahoo Finance contains 'off' data on public holidays, when the market was
    not in session. This incorrect points enabled the alg to make very
    profitable, albeit impossible trades. However as a positive it does 
    demonstrate that the algorithm is finding 'good' trade locations.
    This leads to a TODO: to alter the algorithm to trade only on
    market days and also to alter the volume trading restriction to be applied
    on a timestep basis instead of with flat value accross on entire symbol.

    The orders generated by this trial, the portfolio and some performance
    metrics can be found in the relevant subfolders of this Learner.
